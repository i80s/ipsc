#!/bin/bash

# $1: IP
is_public_ip()
{
	echo "$1" | awk -F. '{
		n=$1*16777216+$2*65536+$3*256+$4;
		if(n<16777216) exit(1);
		if(n>=167772160&&n<184549376) exit(1);
		if(n>=1681915904&&n<1686110208) exit(1);
		if(n>=2130706432&&n<2147483648) exit(1);
		if(n>=2886729728&&n<2887778304) exit(1);
		if(n>=3232235520&&n<3232301056) exit(1);
		if(n>=3758096384) exit(1);
		exit(0);
	}'
}

__is_tty()
{
	if [ "$__cached_is_tty" = Y ]; then
		return 0
	elif [ "$__cached_is_tty" = N ]; then
		return 1
	else
		local self_pid=$$
		case "`readlink /proc/$self_pid/fd/1`" in
			/dev/pts/*|/dev/tty*|/dev/pty*) __cached_is_tty=Y; return 0;;
			*) __cached_is_tty=N; return 1;;
		esac
	fi
}

text_ip_location()
{
	local line
	while IFS= read -r line; do
		# '[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+'
		local ip_list=`echo "$line" | grep -o '\<[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\>'`
		local ip_geo_list= ip
		for ip in $ip_list; do
			is_public_ip "$ip" || continue
			local geo=`php /usr/lib/ipsc/ipip.php "$ip"`
			ip_geo_list="$ip_geo_list  $geo"
		done

		if [ -n "$ip_geo_list" ]; then
			if __is_tty; then
				echo -e "$line \033[32m${ip_geo_list}\033[0m"
			else
				echo "$line ${ip_geo_list}"
			fi
		else
			echo "$line"
		fi
	done
}

if [ $# -eq 0 ]; then
	text_ip_location
else
	stdbuf -oL "$@" | text_ip_location
fi

