#!/bin/bash

# $1: IP to check
is_public_ip()
{
	local ip="$1"

	case "$ip" in
		0.*|10.*|127.*|192.168.*|23?.*|24?.*|25?.*)
			return 1
			;;
		22?.*)
			case "$ip" in
				224.*|225.*|226.*|227.*|228.*|229.*) return 1;;
				*) return 0;;
			esac
			;;
		172.*)
			case "$ip" in
				172.16.*|172.17.*|172.18.*|172.19.*|172.2?.*|172.30.*|172.31.*) return 1;;
				*) return 0;;
			esac
			;;
		100.*)
			case "$ip" in
				100.128.*|100.128.*) return 0;;
				100.6?.*|100.7?.*|100.8?.*|100.9?.*|100.10?.*|100.11?.*|100.12?.*) return 1;;
				*) return 0;;
			esac
			;;
	esac

	return 0
}

text_ip_location()
{
	local line
	while IFS= read -r line; do
		# '[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+'
		local ips=`echo "$line" | grep -o '\<[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\>'`
		local ip_geo_list= ip
		for ip in $ips; do
			is_public_ip "$ip" || continue
			local geo=`php /usr/lib/ipsc/ipip.php "$ip"`
			ip_geo_list="$ip_geo_list  $geo"
		done

		if [ -n "$ip_geo_list" ]; then
			echo -e "$line \033[32m${ip_geo_list}\033[0m"
		else
			echo "$line"
		fi
	done
}

if [ $# -eq 0 ]; then
	text_ip_location
else
	stdbuf -oL "$@" | text_ip_location
fi

